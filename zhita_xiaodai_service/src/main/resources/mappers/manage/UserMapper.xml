<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sourceId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transactionPwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registeTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginStatus" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registeClient" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="useMarket" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="drainageOfPlatformId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="riskControlPoints" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, companyId, sourceId, name, phone, pwd, transactionPwd, registeTime, loginTime, 
    loginStatus, registeClient, useMarket, drainageOfPlatformId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.User">
    insert into user (id, companyId, sourceId, 
      name, phone, pwd, transactionPwd, 
      registeTime, loginTime, loginStatus, 
      registeClient, useMarket, drainageOfPlatformId
      )
    values (#{id,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{sourceid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{transactionpwd,jdbcType=VARCHAR}, 
      #{registetime,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR}, #{loginstatus,jdbcType=VARCHAR}, 
      #{registeclient,jdbcType=VARCHAR}, #{usemarket,jdbcType=VARCHAR}, #{drainageofplatformid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="sourceid != null">
        sourceId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="transactionpwd != null">
        transactionPwd,
      </if>
      <if test="registetime != null">
        registeTime,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="loginstatus != null">
        loginStatus,
      </if>
      <if test="registeclient != null">
        registeClient,
      </if>
      <if test="usemarket != null">
        useMarket,
      </if>
      <if test="drainageofplatformid != null">
        drainageOfPlatformId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="sourceid != null">
        #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="transactionpwd != null">
        #{transactionpwd,jdbcType=VARCHAR},
      </if>
      <if test="registetime != null">
        #{registetime,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="registeclient != null">
        #{registeclient,jdbcType=VARCHAR},
      </if>
      <if test="usemarket != null">
        #{usemarket,jdbcType=VARCHAR},
      </if>
      <if test="drainageofplatformid != null">
        #{drainageofplatformid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.User">
    update user
    <set>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="sourceid != null">
        sourceId = #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="transactionpwd != null">
        transactionPwd = #{transactionpwd,jdbcType=VARCHAR},
      </if>
      <if test="registetime != null">
        registeTime = #{registetime,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        loginStatus = #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="registeclient != null">
        registeClient = #{registeclient,jdbcType=VARCHAR},
      </if>
      <if test="usemarket != null">
        useMarket = #{usemarket,jdbcType=VARCHAR},
      </if>
      <if test="drainageofplatformid != null">
        drainageOfPlatformId = #{drainageofplatformid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.User">
    update user
    set companyId = #{companyid,jdbcType=INTEGER},
      sourceId = #{sourceid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      transactionPwd = #{transactionpwd,jdbcType=VARCHAR},
      registeTime = #{registetime,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=VARCHAR},
      loginStatus = #{loginstatus,jdbcType=VARCHAR},
      registeClient = #{registeclient,jdbcType=VARCHAR},
      useMarket = #{usemarket,jdbcType=VARCHAR},
      drainageOfPlatformId = #{drainageofplatformid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  	  	<!--判断用户名是否存在 -->
	<select id="findphone" resultType="java.lang.Integer" parameterType="java.util.Map">
       SELECT id FROM user where phone=#{newPhone} and companyId=#{companyId}
	</select>
	
	
	
				  	<!--APP 插入用户信息 -->
	<insert id="insertUser1" parameterType="java.util.Map">
		insert into user (phone,registeTime,loginStatus,companyId,registeClient,loginTime,sourceId,useMarket)
		values (#{newPhone},
		#{registrationTime},
		#{loginStatus},
		#{companyId},
		#{registeClient},
		#{registrationTime},
		#{merchantId},
		#{useMarket})
	</insert>
	
	
		<!-- 后台管理 通过手机号获取用户的id  -->
	<select id="getId" parameterType="java.util.Map" resultType="java.lang.Integer">
		select id from user where phone = #{newPhone} and companyId = #{companyId}
	</select>
	
	
				<!--登录时，修改登录状态，用于用户扫二维码登录时-->
	<update id="updateStatus" parameterType="java.util.Map" >
		update user
		set loginStatus = #{loginStatus},
		loginTime = #{loginTime}
		where phone = #{newPhone} and companyId = #{companyId}
	</update>
	
			<!-- 小程序 通过id获取密码  -->
	<select id="getPwd" parameterType="java.lang.Integer" resultType="java.lang.String">
		select pwd from user where id = #{id}
	</select>
	
	
			<!-- 退出时，修改登录状态修改 -->
	<update id="updatelogOutStatus" parameterType="map" >
		update user
		set loginStatus = #{loginStatus}
		where id = #{userId} and company = #{company} 
	</update>
	<!-- 后台管理           用户列表(公司id，姓名，注册开始时间，注册结束时间，用户认证状态，银行卡认证状态，运营商认证状态) -->
	<select id="queryUserList" resultType="com.zhita.model.manage.User">
		select u.id,u.name,u.phone,u.registeTime,uat.attestationStatus,b.attestationStatus,o.attestationStatus from user u 
		LEFT JOIN user_attestation uat on uat.userId=u.id LEFT JOIN bankcard b on b.userId=u.id LEFT JOIN operator o on o.userId=u.id
		<where>
	        <if test="name != null">
	        	u.name=#{arg1}
	        </if>
	        <if test="registeTimeStart != null and registeTimeEnd != null">
	           and u.registeTimeStart between #{arg2} and #{arg3}
	        </if>
	        <if test="userattestationstatus!=null">
	           and uat.attestationStatus=#{arg4}
	        </if>
	         <if test="bankattestationstatus!=null">
	           and b.attestationStatus=#{arg5}
	        </if>
	         <if test="operaattestationstatus!=null">
	           and o.attestationStatus=#{arg6}
	        </if>
	        and companyId=#{arg0} and ifBlacklist=0 order by u.registeTime desc
      </where>
	</select>
	<!-- 后台管理         添加黑名单(修改当前用户的黑名单状态) -->
	<update id="upaBlacklistStatus" parameterType="java.lang.Integer">
		update user set ifBlacklist=1 where id=#{arg0}
	</update>
	
	<!--后台管理      添加黑名单（将当前用户存进黑名单里）  -->
	<insert id="addBlacklist">
		insert into blacklist_user(companyId,userId,operator,operationTime) values{#{arg0},#{arg1},#{arg2},#{arg3}}
	</insert>
	
	
			<!--APP 修改密码-->
	<update id="updatePwd" parameterType="java.util.Map" >
		update user
		set pwd = #{md5Pwd}
		where phone = #{newPhone} and companyId = #{companyId}
	</update>
	
	
					<!--APP 查询密码-->
	<select id="getMd5pwd" parameterType="java.util.Map" resultType="java.lang.String">
      select pwd from user where phone = #{newPhone} and companyId = #{companyId}
	</select>
	
	
			<!--APP 插入密码-->
		<update id="setPwd" parameterType="map" >
		update user
		set pwd = #{md5Pwd}
		where id = #{userId}
	</update>	
	
	
				<!--APP 更新分控分数-->
		<update id="updateScore" parameterType="java.util.Map" >
		update user
		set riskControlPoints = #{score}
		where id = #{userId}
	</update>	
	
						<!--APP 查询用户的分控分数-->
	<select id="getRiskControlPoints" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      select riskControlPoints from user where id = #{userId}
	</select>
	
</mapper>