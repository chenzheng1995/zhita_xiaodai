<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhita.dao.manage.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="companyId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sourceId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transactionPwd" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registeTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="loginStatus" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registeClient" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="useMarket" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="drainageOfPlatformId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="riskControlPoints" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="canBorrowLines" jdbcType="DECIMAL" />
      <arg column="shareOfState" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="delayTimes" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="operatorsAuthentication" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    u.id, u.companyId, u.sourceId, u.name, u.phone, u.pwd, u.transactionPwd, u.registeTime, u.loginTime, 
    u.loginStatus, u.registeClient, u.useMarket, u.drainageOfPlatformId,u.shareOfState,u.riskControlPoints,
    u.applynumber,u.applytime,u.operator,u.operationTime,s.sourcename,mcs.rmModleName
  </sql>
   <sql id="Base_Column_List2">
    u.id, u.companyId, u.sourceId, u.name, u.phone, u.pwd, u.transactionPwd, u.registeTime, u.loginTime, 
    u.loginStatus, u.registeClient, u.useMarket, u.drainageOfPlatformId,u.shareOfState,u.riskControlPoints,
    u.applynumber,u.applytime,u.operator,u.operationTime,s.sourcename,mcs.rmModleName,su.account
  </sql>
   <sql id="Base_Column_List1">
    u.phone,ut.id, ut.userId, ut.trueName, ut.idcard_number idcardNumber,ut.homeAddressLongitude, 
    ut.homeAddressLatitude, ut.detailAddress, ut.headUrl, ut.nationalEmblemUrl, ut.linkmanOneRelation, 
    ut.linkmanOneName, ut.linkmanOnePhone, ut.linkmanTwoRelation, ut.linkmanTwoName, ut.linkmanTwoPhone, 
    ut.faceBizToken, ut.idCardBizToken, ut.sign, ut.gender, ut.nationality, ut.birth_year birthYear, ut.birth_month, 
    ut.birth_day, ut.address, ut.issued_by,ut.valid_date_start, ut.valid_date_end
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.User">
    insert into user (id, companyId, sourceId, 
      name, phone, pwd, transactionPwd, 
      registeTime, loginTime, loginStatus, 
      registeClient, useMarket, drainageOfPlatformId
      )
    values (#{id,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{sourceid,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{transactionpwd,jdbcType=VARCHAR}, 
      #{registetime,jdbcType=VARCHAR}, #{logintime,jdbcType=VARCHAR}, #{loginstatus,jdbcType=VARCHAR}, 
      #{registeclient,jdbcType=VARCHAR}, #{usemarket,jdbcType=VARCHAR}, #{drainageofplatformid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyid != null">
        companyId,
      </if>
      <if test="sourceid != null">
        sourceId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="transactionpwd != null">
        transactionPwd,
      </if>
      <if test="registetime != null">
        registeTime,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="loginstatus != null">
        loginStatus,
      </if>
      <if test="registeclient != null">
        registeClient,
      </if>
      <if test="usemarket != null">
        useMarket,
      </if>
      <if test="drainageofplatformid != null">
        drainageOfPlatformId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="sourceid != null">
        #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="transactionpwd != null">
        #{transactionpwd,jdbcType=VARCHAR},
      </if>
      <if test="registetime != null">
        #{registetime,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="registeclient != null">
        #{registeclient,jdbcType=VARCHAR},
      </if>
      <if test="usemarket != null">
        #{usemarket,jdbcType=VARCHAR},
      </if>
      <if test="drainageofplatformid != null">
        #{drainageofplatformid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.User">
    update user
    <set>
      <if test="companyid != null">
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="sourceid != null">
        sourceId = #{sourceid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="transactionpwd != null">
        transactionPwd = #{transactionpwd,jdbcType=VARCHAR},
      </if>
      <if test="registetime != null">
        registeTime = #{registetime,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=VARCHAR},
      </if>
      <if test="loginstatus != null">
        loginStatus = #{loginstatus,jdbcType=VARCHAR},
      </if>
      <if test="registeclient != null">
        registeClient = #{registeclient,jdbcType=VARCHAR},
      </if>
      <if test="usemarket != null">
        useMarket = #{usemarket,jdbcType=VARCHAR},
      </if>
      <if test="drainageofplatformid != null">
        drainageOfPlatformId = #{drainageofplatformid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.User">
    update user
    set companyId = #{companyid,jdbcType=INTEGER},
      sourceId = #{sourceid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      transactionPwd = #{transactionpwd,jdbcType=VARCHAR},
      registeTime = #{registetime,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=VARCHAR},
      loginStatus = #{loginstatus,jdbcType=VARCHAR},
      registeClient = #{registeclient,jdbcType=VARCHAR},
      useMarket = #{usemarket,jdbcType=VARCHAR},
      drainageOfPlatformId = #{drainageofplatformid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  	  	<!--判断用户名是否存在 -->
	<select id="findphone" resultType="java.lang.Integer" parameterType="java.util.Map">
       SELECT id FROM user where phone=#{newPhone} and companyId=#{companyId}
	</select>
	
	
	
				  	<!--APP 插入用户信息 -->
	<insert id="insertUser1" parameterType="java.util.Map">
		insert into user (phone,registeTime,loginStatus,companyId,registeClient,loginTime,sourceId,useMarket,operatorsAuthentication)
		values (#{newPhone},
		#{registrationTime},
		#{loginStatus},
		#{companyId},
		#{registeClient},
		#{registrationTime},
		#{merchantId},
		#{useMarket},
		#{operatorsAuthentication})
	</insert>
	
	
		<!-- 后台管理 通过手机号获取用户的id  -->
	<select id="getId" parameterType="java.util.Map" resultType="java.lang.Integer">
		select id from user where phone = #{newPhone} and companyId = #{companyId}
	</select>
	
	
				<!--登录时，修改登录状态，用于用户扫二维码登录时-->
	<update id="updateStatus" parameterType="java.util.Map" >
		update user
		set loginStatus = #{loginStatus},
		loginTime = #{loginTime}
		where phone = #{newPhone} and companyId = #{companyId}
	</update>
	
			<!-- 小程序 通过id获取密码  -->
	<select id="getPwd" parameterType="java.lang.Integer" resultType="java.lang.String">
		select pwd from user where id = #{id}
	</select>
	
	
			<!-- 退出时，修改登录状态修改 -->
	<update id="updatelogOutStatus" parameterType="map" >
		update user
		set loginStatus = #{loginStatus}
		where id = #{userId} and company = #{company} 
	</update>
	<!-- 后台管理           用户列表(公司id，page,pagesize,姓名，手机号，注册开始时间，注册结束时间，用户认证状态，银行卡认证状态，运营商认证状态)-->
	<select id="queryUserList" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="com.zhita.model.manage.User">
		select u.id,u.name,u.phone,u.registeTime,u.shareOfState,u.registeClient,s.sourcename,uat.attestationStatus userattestationstatus,b.attestationStatus bankattestationstatus,o.attestationStatus operaattestationstatus from  
		user u LEFT JOIN source s on u.sourceid=s.id left join user_attestation uat on uat.userId=u.id LEFT JOIN bankcard b on b.userId=u.id LEFT JOIN operator o on o.userId=u.id
		where u.companyId=#{companyId,jdbcType=INTEGER} and u.ifBlacklist=0
	        <if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone !='' ">
	        	and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="registeClient != null and registeClient !='' ">
	        	and u.registeClient = #{registeClient,jdbcType=VARCHAR}
	        </if>
	        <if test="registeTimeStart != null and registeTimeStart!='' and registeTimeEnd != null and registeTimeEnd!='' ">
	           and u.registeTime between #{registeTimeStart,jdbcType=VARCHAR} and #{registeTimeEnd,jdbcType=VARCHAR}
	        </if>
	        <if test="userattestationstatus !=null and userattestationstatus !='' and userattestationstatus==0 ">
	           and (uat.attestationStatus=#{userattestationstatus,jdbcType=VARCHAR} or uat.attestationStatus is null)
	        </if>
	        <if test="userattestationstatus !=null and userattestationstatus !='' and userattestationstatus==1 ">
	           and uat.attestationStatus=#{userattestationstatus,jdbcType=VARCHAR}
	        </if>
	        <if test="bankattestationstatus !=null and bankattestationstatus !='' and bankattestationstatus==0 ">
	           and (b.attestationStatus=#{bankattestationstatus,jdbcType=VARCHAR} or b.attestationStatus is null)
	        </if>
	        <if test="bankattestationstatus !=null and bankattestationstatus !='' and bankattestationstatus==1 ">
	           and b.attestationStatus=#{bankattestationstatus,jdbcType=VARCHAR}
	        </if>
	        <if test="operaattestationstatus !=null and operaattestationstatus !='' and operaattestationstatus==0 ">
	           and (o.attestationStatus=#{operaattestationstatus,jdbcType=VARCHAR} or o.attestationStatus is null)
	        </if>
	         <if test="(operaattestationstatus !=null and operaattestationstatus !='' and operaattestationstatus==1)|| (operaattestationstatus !=null and operaattestationstatus !='' and operaattestationstatus==2)">
	           and o.attestationStatus=#{operaattestationstatus,jdbcType=VARCHAR}
	        </if>
	     group by u.id order by u.registeTime desc  limit #{page},#{pagesize}
	</select>
	<!-- 后台管理           用户列表(公司id，page,pagesize,姓名，手机号，注册开始时间，注册结束时间，用户认证状态，银行卡认证状态，运营商认证状态)  查询数量-->
	<select id="queryUserListcount" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="java.lang.Integer">
		select count(DISTINCT u.id) from  
		user u LEFT JOIN source s on u.sourceid=s.id left join user_attestation uat on uat.userId=u.id LEFT JOIN bankcard b on b.userId=u.id LEFT JOIN operator o on o.userId=u.id
		where u.companyId=#{companyId,jdbcType=INTEGER} and u.ifBlacklist=0
	        <if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone!='' ">
	        	and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="registeClient != null and registeClient !='' ">
	        	and u.registeClient = #{registeClient,jdbcType=VARCHAR}
	        </if>
	        <if test="registeTimeStart != null and registeTimeStart!='' and registeTimeEnd != null and registeTimeEnd!='' ">
	           and u.registeTime between #{registeTimeStart,jdbcType=VARCHAR} and #{registeTimeEnd,jdbcType=VARCHAR}
	        </if>
	        <if test="userattestationstatus !=null and userattestationstatus!='' and userattestationstatus==0 ">
	           and (uat.attestationStatus=#{userattestationstatus,jdbcType=VARCHAR} or uat.attestationStatus is null)
	        </if>
	        <if test="userattestationstatus !=null and userattestationstatus !='' and userattestationstatus==1 ">
	           and uat.attestationStatus=#{userattestationstatus,jdbcType=VARCHAR}
	        </if>
	         <if test="bankattestationstatus !=null and bankattestationstatus!='' and bankattestationstatus==0 ">
	           and (b.attestationStatus=#{bankattestationstatus,jdbcType=VARCHAR} or b.attestationStatus is null)
	        </if>
	        <if test="bankattestationstatus !=null and bankattestationstatus !='' and bankattestationstatus==1 ">
	           and b.attestationStatus=#{bankattestationstatus,jdbcType=VARCHAR}
	        </if>
	         <if test="operaattestationstatus !=null and operaattestationstatus!='' and operaattestationstatus==0 ">
	           and (o.attestationStatus=#{operaattestationstatus,jdbcType=VARCHAR} or o.attestationStatus is null)
	        </if>
	        <if test="(operaattestationstatus !=null and operaattestationstatus !='' and operaattestationstatus==1)|| (operaattestationstatus !=null and operaattestationstatus !='' and operaattestationstatus==2) ">
	           and o.attestationStatus=#{operaattestationstatus,jdbcType=VARCHAR}
	        </if>
	</select>
	<!-- 后台管理         添加黑名单(修改当前用户的黑名单状态) -->
	<update id="upaBlacklistStatus" parameterType="java.lang.Integer">
		update user set ifBlacklist=1 where id=#{arg0}
	</update>
	<!-- 后台管理         解除黑名单(修改当前用户的黑名单状态) -->
	<update id="upaBlacklistStatus1" parameterType="java.lang.Integer">
		update user set ifBlacklist=0 where id=#{arg0}
	</update>
	<!--后台管理      添加黑名单（将当前用户存进黑名单里）  -->
	<insert id="addBlacklist">
		insert into blacklist_user(companyId,userId,operator,operationTime,blackType) values(#{arg0},#{arg1},#{arg2},#{arg3},#{arg4})
	</insert>
	<!-- 后台管理      解除黑名单（修改当前用在户黑名单表里的假删除状态） -->
	<update id="upaBlacklist" parameterType="java.lang.Integer">
		update blacklist_user set deleted=1 where userid=#{arg0}
	</update>
	<!--后台管理       通过用户id查询该用户姓名，手机号，身份证号  -->
	<select id="queryByUserid" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.BlacklistUser">
		select u.name,u.phone,uat.idcard_number idcard from user u left join user_attestation uat on u.id=uat.userid where u.id=#{arg0}
	</select>
	
			<!--APP 修改密码-->
	<update id="updatePwd" parameterType="java.util.Map" >
		update user
		set pwd = #{md5Pwd}
		where phone = #{newPhone} and companyId = #{companyId}
	</update>
	
	
					<!--APP 查询密码-->
	<select id="getMd5pwd" parameterType="java.util.Map" resultType="java.lang.String">
      select pwd from user where phone = #{newPhone} and companyId = #{companyId}
	</select>
	
	
			<!--APP 插入密码-->
		<update id="setPwd" parameterType="map" >
		update user
		set pwd = #{md5Pwd}
		where id = #{userId}
	</update>	
	
	
				<!--APP 更新分控分数-->
		<update id="updateScore" parameterType="java.util.Map" >
		update user
		set riskControlPoints = #{score},shareOfState = #{shareOfState}
		where id = #{userId}
	</update>	
	
						<!--APP 查询用户的分控分数-->
	<select id="getRiskControlPoints" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      select riskControlPoints from user where id = #{userId}
	</select>

	<!-- 后台管理         查询当前用户在用户认证表的信息 -->
	<select id="queryUserAttesta" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.UserAttestation">
		select 
    	<include refid="Base_Column_List1" />
   		from user_attestation ut inner join user u on ut.userid=u.id
    	where userid = #{arg0}
	</select>
	<!--后台管理          查询当前用户在银行卡表的信息  -->
	<select id="queryBankcard" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Bankcard">
		select bt.bankcardTypeName,b.id,b.userid,b.bankcardName,b.tiedCardPhone from bankcard b INNER JOIN bankcard_type bt on b.bankcardTypeId=bt.id where b.userid=#{arg0}
	</select>
	<!-- 后台管理        查询当前用户在运营商表的信息 -->
	<select id="queryOperator" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Operator">
		select * from operator where userid=#{arg0}
	</select>
	<!--后台管理       根据用户id  查询该用户是否在订单表有未还清的订单  -->
	<select id="qeuryorder" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Orders">
		select id,orderNumber from orders where userid=#{arg0} and orderStatus=0
	</select>

	<select id="getshareOfState" parameterType="java.lang.Integer" resultType="java.lang.String">
		select shareOfState from user where id=#{userId}
	</select>
	
	
		<select id="getdelayTimes" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select delayTimes from user where id = #{userId}
	</select>	
	

  <!-- 机审状态用户【包含机审拒绝和机审通过用户】（公司id，page，pagesize,申请编号，姓名，手机号，申请时间开始，申请时间结束） -->
  <select id="queryAllUser" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="com.zhita.model.manage.User">
  	 select 
     <include refid="Base_Column_List" />
     from user u inner join source s on u.sourceid=s.id inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyId=#{companyId,jdbcType=INTEGER} and (u.shareOfState=0 or u.shareOfState=2) and u.ifBlacklist=0
		<if test="applynumber != null and applynumber !='' ">
	        and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	    </if>
      	<if test="name != null and name!='' ">
	        and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	    </if>
	    <if test="phone != null and phone !='' ">
	        and u.phone = #{phone,jdbcType=VARCHAR}
	    </if>
	    <if test="registeClient != null and registeClient !='' ">
			and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 		</if>
	    <if test="applytimestart != null and applytimestart !='' and applytimeend != null and applytimeend !='' ">
	        and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	    </if>
     order by u.applytime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
  </select>
   <!-- 机审状态用户【包含机审拒绝和机审通过用户】（公司id，page，pagesize,申请编号，姓名，手机号，申请时间开始，申请时间结束）        查询数量-->
  <select id="queryAllUsercount" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="java.lang.Integer">
  	 select count(*) from user u inner join source s on u.sourceid=s.id inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyid=#{companyId,jdbcType=INTEGER} and (u.shareOfState=0 or u.shareOfState=2) and u.ifBlacklist=0
     	<if test="applynumber != null and applynumber !='' ">
	        and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	    </if>
      	<if test="name != null and name !='' ">
	        and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	    </if>
	    <if test="phone != null and phone !='' ">
	        and u.phone = #{phone,jdbcType=VARCHAR}
	    </if>
	     <if test="registeClient != null and registeClient !='' ">
			and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 		</if>
	    <if test="applytimestart != null and applytimestart!='' and applytimeend != null and applytimeend !='' ">
	        and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	    </if>
  </select>
  
  <!-- 人审状态用户【包含机审拒绝和机审通过用户】（公司id，page，pagesize,申请编号，姓名，手机号，申请时间开始，申请时间结束） -->
  <select id="queryAllUserPeople" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="com.zhita.model.manage.User">
  	 select 
     <include refid="Base_Column_List" />
     from user u inner join source s on u.sourceid=s.id inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyid=#{companyId,jdbcType=INTEGER} and u.shareOfState=1  and u.ifBlacklist=0
     		<if test="applynumber != null and applynumber !='' ">
	        	and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	        </if>
      		<if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone!='' ">
	        	and u.phone = #{phone,jdbcType=VARCHAR}
	        </if>
	        <if test="registeClient != null and registeClient !='' ">
				and u.registeClient = #{registeClient,jdbcType=VARCHAR}
			</if>
	        <if test="applytimestart != null and applytimestart!='' and applytimeend != null and applytimeend !='' ">
	           and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	        </if>
     order by u.applytime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
  </select>
   <!-- 人审状态用户【包含机审拒绝和机审通过用户】（公司id，page，pagesize,申请编号，姓名，手机号，申请时间开始，申请时间结束）        查询数量-->
  <select id="queryAllUserPeoplecount" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="java.lang.Integer">
  	 select count(*) from user u inner join source s on u.sourceid=s.id inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyid=#{companyId,jdbcType=INTEGER} and u.shareOfState=1 and u.ifBlacklist=0 
     		<if test="applynumber != null and applynumber !='' ">
	        	and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	        </if>
      		<if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone!='' ">
	        	and u.phone = #{phone,jdbcType=VARCHAR}
	        </if>
	        <if test="registeClient != null and registeClient !='' ">
				and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 			</if>
	        <if test="applytimestart != null and applytimestart!='' and applytimeend != null and applytimeend !='' ">
	           and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	        </if>
  </select>
 	
 	<!-- 人审通过按钮 -->
  <update id="updateShareOfState">
  	update user set shareOfState=4,operator=#{arg0},operationTime=#{arg1} where id=#{arg2}
  </update>
  
   <!-- 人审不通过按钮 -->
  <update id="updateShareOfStateNo"> 
  	update user set shareOfState=3,operator=#{arg0},operationTime=#{arg1} where id=#{arg2}
  </update>
  
    <!-- 人审过后状态用户【包括人审不通过和人审通过】（公司id，page,申请编号，姓名，手机号，申请时间开始，申请时间结束，审核员id） -->
  <select id="queryAllUserPeopleYet" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="com.zhita.model.manage.User">
  	 select 
     <include refid="Base_Column_List2" />
     from user u inner join source s on u.sourceid=s.id inner join sys_user su on su.userId=u.operator inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyid=#{companyId,jdbcType=INTEGER} and (u.shareOfState=3 or u.shareOfState=4) and u.ifBlacklist=0
     		<if test="applynumber != null and applynumber !='' ">
	        	and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	        </if>
      		<if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone!='' ">
	        	and u.phone = #{phone,jdbcType=VARCHAR}
	        </if>
	       	<if test="registeClient != null and registeClient !='' ">
				and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 			</if>
	        <if test="applytimestart != null and applytimestart!='' and applytimeend != null and applytimeend !='' ">
	           and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	        </if>
	        <if test="operatorid != null and operatorid !='' ">
	        	and u.operator =#{operatorid,jdbcType=INTEGER}
	        </if>
     order by u.applytime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER}
  </select>
   <!-- 人审过后状态用户【包括人审不通过和人审通过】（公司id，page,申请编号，姓名，手机号，申请时间开始，申请时间结束，审核员id）        查询数量-->
  <select id="queryAllUserPeopleYetcount" parameterType="com.zhita.model.manage.UserLikeParameter" resultType="java.lang.Integer">
  	 select count(*) from user u inner join source s on u.sourceid=s.id inner join sys_user su on su.userId=u.operator inner join manage_control_settings mcs on s.manageControlId=mcs.id
     where u.companyid=#{companyId,jdbcType=INTEGER} and (u.shareOfState=3 or u.shareOfState=4) and u.ifBlacklist=0
     		<if test="applynumber != null and applynumber !='' ">
	        	and u.applynumber like "%"#{applynumber,jdbcType=VARCHAR}"%"
	        </if>
      		<if test="name != null and name!='' ">
	        	and u.name like "%"#{name,jdbcType=VARCHAR}"%"
	        </if>
	        <if test="phone != null and phone!='' ">
	        	and u.phone = #{phone,jdbcType=VARCHAR}
	        </if>
	       	<if test="registeClient != null and registeClient !='' ">
				and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 			</if>
	        <if test="applytimestart != null and applytimestart!='' and applytimeend != null and applytimeend !='' ">
	           and u.applytime between #{applytimestart,jdbcType=VARCHAR} and #{applytimeend,jdbcType=VARCHAR}
	        </if>
	        <if test="operatorid != null and operatorid !='' ">
	        	and u.operator =#{operatorid,jdbcType=INTEGER}
	        </if>
  </select>
  
  
     <!-- 更新分控状态 -->
  <update id="updateshareOfState"> 
  	update user set shareOfState=#{shareOfState} where id = #{userId}
  </update>


  <update id="setuser" parameterType="java.util.Map"> 
  	update user set applynumber=#{applynumber},applytime=#{timStamp} where id = #{userId}
  </update>

  <update id="updatename" parameterType="java.util.Map"> 
  	update user set name=#{name} where id = #{userId}
  </update>
  
    <update id="updateifBlacklist" parameterType="java.lang.Integer"> 
  	update user set ifBlacklist='1' where id = #{userId}
  </update>
  
  		<select id="getphone" parameterType="java.lang.Integer" resultType="java.lang.String">
		select phone from user where id = #{id}
	</select>	
  
      <update id="updateCanBorrowLines" parameterType="java.util.Map" > 
  	update user set canBorrowLines=#{finalLine} where id = #{userId}
  </update>
  
   		<select id="getcanBorrowLines" parameterType="java.lang.Integer" resultType="java.math.BigDecimal">
		select canBorrowLines from user where id = #{userId}
	</select> 
	
	   		<select id="getifBlacklist" parameterType="java.util.Map" resultType="java.lang.String">
		select ifBlacklist from user where phone =#{newPhone}  and companyId = #{companyId}
	</select> 
	
	
	      <update id="updateifBlacklist1" parameterType="java.util.Map" > 
  	update user set ifBlacklist=1 where phone= #{newPhone} and companyId = #{companyId}
  </update>
  
  	   		<select id="getnumber" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(phone) from user where registeTime>=#{todayZeroTimestamps}
		and registeTime &lt;
		#{tomorrowZeroTimestamps} and companyId = #{companyId}
	</select> 
  
  	   		<select id="getsourceId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
     select sourceId from user where id = #{userId}
	</select> 
  
  
  		<update id="updateScore1" parameterType="java.util.Map" >
		update user
		set shareOfState = #{shareOfState}
		where id = #{userId}
	</update>	
  
</mapper>