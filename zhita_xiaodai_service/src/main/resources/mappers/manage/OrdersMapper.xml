<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhita.dao.manage.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.zhita.model.manage.Orders" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="companyId" property="companyId" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="orderNumber" property="orderNumber" jdbcType="VARCHAR" />
    <result column="borrowMoneyUse" property="borrowMoneyUse" jdbcType="VARCHAR" />
    <result column="borrowRepayBankcard" property="borrowRepayBankcard" jdbcType="VARCHAR" />
    <result column="bankPhone" property="bankPhone" jdbcType="VARCHAR" />
    <result column="orderCreateTime" property="orderCreateTime" jdbcType="VARCHAR" />
    <result column="riskManagemenType" property="riskManagemenType" jdbcType="VARCHAR" />
    <result column="borrowTimeLimit" property="borrowTimeLimit" jdbcType="INTEGER" />
    <result column="borrowMoneyWay" property="borrowMoneyWay" jdbcType="VARCHAR" />
    <result column="shouldReturnTime" property="shouldReturnTime" jdbcType="VARCHAR" />
    <result column="realtime" property="realtime" jdbcType="VARCHAR" />
    <result column="ifcandefer" property="ifcandefer" jdbcType="VARCHAR" />
    <result column="canDeferNumberoftime" property="canDeferNumberoftime" jdbcType="INTEGER" />
    <result column="riskmanagementFraction" property="riskmanagementFraction" jdbcType="VARCHAR" />
    <result column="overdueGrade" property="overdueGrade" jdbcType="VARCHAR" />
    <result column="riskcontrolname" property="riskcontrolname" jdbcType="VARCHAR" />
    <result column="ifpeopleWhose" property="ifpeopleWhose" jdbcType="VARCHAR" />
    <result column="assessor" property="assessor" jdbcType="VARCHAR" />
    <result column="orderStatus" property="orderStatus" jdbcType="VARCHAR" />
    <result column="repaymentMoney" property="repaymentMoney" jdbcType="VARCHAR" />
    <result column="howManyTimesBorMoney" property="howManyTimesBorMoney" jdbcType="INTEGER" />
    <association property="orderdetails" javaType="com.zhita.model.manage.Orderdetails">
		    <id column="id" property="id" jdbcType="INTEGER" />
		    <result column="orderId" property="orderId" jdbcType="INTEGER" />
		    <result column="realityBorrowMoney" property="realityBorrowMoney" jdbcType="DECIMAL" />
		    <result column="makeLoans" property="makeLoans" jdbcType="DECIMAL" />
		    <result column="interestDay" property="interestDay" jdbcType="DECIMAL" />
		    <result column="interestSum" property="interestSum" jdbcType="DECIMAL" />
		    <result column="overdueNumberOfDays" property="overdueNumberOfDays" jdbcType="VARCHAR" />
		    <result column="interestPenaltyDay" property="interestPenaltyDay" jdbcType="DECIMAL" />
		    <result column="interestPenaltySum" property="interestPenaltySum" jdbcType="DECIMAL" />
		    <result column="interestInAll" property="interestInAll" jdbcType="DECIMAL" />
		    <result column="shouldReapyMoney" property="shouldReapyMoney" jdbcType="DECIMAL" />
		    <result column="technicalServiceMoney" property="technicalServiceMoney" jdbcType="DECIMAL" />
		    <result column="realityAccount" property="realityAccount" jdbcType="DECIMAL" />
		    <result column="rejectMonadCause" property="rejectMonadCause" jdbcType="VARCHAR" />
		    <result column="DrainageOfPlatform" property="DrainageOfPlatform" jdbcType="VARCHAR" />
		    <result column="registerClient" property="registerClient" jdbcType="VARCHAR" />
	</association>
	<association property="user" javaType="com.zhita.model.manage.User">
		  <result column="id" property="id" jdbcType="INTEGER" />
	      <result column="companyId" property="companyid" jdbcType="INTEGER" />
	      <result column="sourceId" property="sourceid" jdbcType="INTEGER" />
	      <result column="name" property="name" jdbcType="VARCHAR" />
	      <result column="phone" property="phone" jdbcType="VARCHAR" />
	      <result column="pwd" property="pwd" jdbcType="VARCHAR" />
	      <result column="transactionPwd" property="transactionpwd" jdbcType="VARCHAR" />
	      <result column="registeTime" property="registetime" jdbcType="VARCHAR" />
	      <result column="loginTime" property="logintime" jdbcType="VARCHAR" />
	      <result column="loginStatus" property="loginstatus" jdbcType="VARCHAR" />
	      <result column="registeClient" property="registeclient" jdbcType="VARCHAR" />
	      <result column="useMarket" property="usemarket" jdbcType="VARCHAR" />
	      <result column="drainageOfPlatformId" property="drainageofplatformid" jdbcType="INTEGER" />
	      <result column="ifBlacklist" property="ifblacklist" jdbcType="VARCHAR" />
	      <result column="shareOfState" property="shareOfState" jdbcType="VARCHAR" />
	      <result column="operationTime" property="operationTime" jdbcType="VARCHAR" />
	      <result column="sourcename" property="sourcename" jdbcType="VARCHAR" />
	      <result column="account" property="account" jdbcType="VARCHAR" />
	      <result column="idcard_number" property="idcard" jdbcType="VARCHAR" />
	</association>

  </resultMap>
  <sql id="Base_Column_List" >
    o.id, o.companyId, o.userId, o.orderNumber, o.borrowMoneyUse, o.borrowRepayBankcard, o.bankPhone, 
    o.orderCreateTime, o.riskManagemenType, o.borrowTimeLimit, o.borrowMoneyWay, o.orderStatus,
    o.shouldReturnTime, o.realtime, o.ifcandefer, o.canDeferNumberoftime, o.riskmanagementFraction, 
    o.overdueGrade,o.ifpeopleWhose,o.assessor,o.howManyTimesBorMoney,
    
    od.id, od.orderId, od.realityBorrowMoney, od.makeLoans, od.interestDay, od.interestSum, od.overdueNumberOfDays, 
    od.interestPenaltyDay, od.interestPenaltySum, od.interestInAll, od.shouldReapyMoney, od.technicalServiceMoney, 
    od.realityAccount, od.rejectMonadCause, od.DrainageOfPlatform, od.registerClient,
    
    u.id, u.companyId, u.sourceId, u.name, u.phone, u.pwd, u.transactionPwd, u.registeTime, u.loginTime, 
    u.loginStatus, u.registeClient, u.useMarket, u.drainageOfPlatformId,u.ifBlacklist,u.shareOfState,u.operationTime,
    
    s.sourcename,r.repaymentMoney,su.account,mcs.rmModleName riskcontrolname
  </sql>
    <sql id="Base_Column_List2" >
    o.id, o.companyId, o.userId, o.orderNumber, o.borrowMoneyUse, o.borrowRepayBankcard, o.bankPhone, 
    o.orderCreateTime, o.riskManagemenType, o.borrowTimeLimit, o.borrowMoneyWay, o.orderStatus,
    o.shouldReturnTime, o.realtime, o.ifcandefer, o.canDeferNumberoftime, o.riskmanagementFraction, 
    o.overdueGrade, o.riskcontrolname,o.ifpeopleWhose,o.howManyTimesBorMoney,
    
    od.id, od.orderId, od.realityBorrowMoney, od.makeLoans, od.interestDay, od.interestSum, od.overdueNumberOfDays, 
    od.interestPenaltyDay, od.interestPenaltySum, od.interestInAll, od.shouldReapyMoney, od.technicalServiceMoney, 
    od.realityAccount, od.rejectMonadCause, od.DrainageOfPlatform, od.registerClient,
    
    u.id, u.companyId, u.sourceId, u.name, u.phone, u.pwd, u.transactionPwd, u.registeTime, u.loginTime, 
    u.loginStatus, u.registeClient, u.useMarket, u.drainageOfPlatformId,u.ifBlacklist,
    
    r.repaymentMoney,su.account as assessor
  </sql>
  <sql id="Base_Column_List1" >
    o.id, o.companyId, o.userId, o.orderNumber, o.borrowMoneyUse, o.borrowRepayBankcard, o.bankPhone, 
    o.orderCreateTime, o.riskManagemenType, o.borrowTimeLimit, o.borrowMoneyWay, o.orderStatus,
    o.shouldReturnTime, o.realtime, o.ifcandefer, o.canDeferNumberoftime, o.riskmanagementFraction, 
    o.overdueGrade, o.riskcontrolname,o.ifpeopleWhose,o.assessor,o.howManyTimesBorMoney,
    
    od.id, od.orderId, od.realityBorrowMoney, od.makeLoans, od.interestDay, od.interestSum, od.overdueNumberOfDays, 
    od.interestPenaltyDay, od.interestPenaltySum, od.interestInAll, od.shouldReapyMoney, od.technicalServiceMoney, 
    od.realityAccount, od.rejectMonadCause, od.DrainageOfPlatform, od.registerClient,
    
    u.id, u.companyId, u.sourceId, u.name, u.phone, u.pwd, u.transactionPwd, u.registeTime, u.loginTime, 
    u.loginStatus, u.registeClient, u.useMarket, u.drainageOfPlatformId,u.ifBlacklist,s.sourcename,r.repaymentMoney,uat.idcard_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhita.model.manage.Orders" >
    insert into orders (id, companyId, userId, 
      orderNumber, borrowMoneyUse, borrowRepayBankcard, 
      bankPhone, orderCreateTime, riskManagemenType, 
      borrowTimeLimit, borrowMoneyWay, howManyTimesBorMoney, 
      borrowMoneyState, shouldReturnTime, realtime, 
      ifcandefer, canDeferNumberoftime, riskmanagementFraction, 
      ifoverdue, overdueGrade, overdue_phonestatu
      )
    values (#{id,jdbcType=INTEGER}, #{companyid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{ordernumber,jdbcType=VARCHAR}, #{borrowmoneyuse,jdbcType=VARCHAR}, #{borrowrepaybankcard,jdbcType=VARCHAR}, 
      #{bankphone,jdbcType=VARCHAR}, #{ordercreatetime,jdbcType=VARCHAR}, #{riskmanagementype,jdbcType=VARCHAR}, 
      #{borrowtimelimit,jdbcType=INTEGER}, #{borrowmoneyway,jdbcType=VARCHAR}, #{howmanytimesbormoney,jdbcType=INTEGER}, 
      #{borrowmoneystate,jdbcType=VARCHAR}, #{shouldreturntime,jdbcType=VARCHAR}, #{realtime,jdbcType=VARCHAR}, 
      #{ifcandefer,jdbcType=VARCHAR}, #{candefernumberoftime,jdbcType=INTEGER}, #{riskmanagementfraction,jdbcType=VARCHAR}, 
      #{ifoverdue,jdbcType=VARCHAR}, #{overduegrade,jdbcType=VARCHAR}, #{overduePhonestatu,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhita.model.manage.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyid != null" >
        companyId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="borrowmoneyuse != null" >
        borrowMoneyUse,
      </if>
      <if test="borrowrepaybankcard != null" >
        borrowRepayBankcard,
      </if>
      <if test="bankphone != null" >
        bankPhone,
      </if>
      <if test="ordercreatetime != null" >
        orderCreateTime,
      </if>
      <if test="riskmanagementype != null" >
        riskManagemenType,
      </if>
      <if test="borrowtimelimit != null" >
        borrowTimeLimit,
      </if>
      <if test="borrowmoneyway != null" >
        borrowMoneyWay,
      </if>
      <if test="howmanytimesbormoney != null" >
        howManyTimesBorMoney,
      </if>
      <if test="borrowmoneystate != null" >
        borrowMoneyState,
      </if>
      <if test="shouldreturntime != null" >
        shouldReturnTime,
      </if>
      <if test="realtime != null" >
        realtime,
      </if>
      <if test="ifcandefer != null" >
        ifcandefer,
      </if>
      <if test="candefernumberoftime != null" >
        canDeferNumberoftime,
      </if>
      <if test="riskmanagementfraction != null" >
        riskmanagementFraction,
      </if>
      <if test="ifoverdue != null" >
        ifoverdue,
      </if>
      <if test="overduegrade != null" >
        overdueGrade,
      </if>
      <if test="overduePhonestatu != null" >
        overdue_phonestatu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="borrowmoneyuse != null" >
        #{borrowmoneyuse,jdbcType=VARCHAR},
      </if>
      <if test="borrowrepaybankcard != null" >
        #{borrowrepaybankcard,jdbcType=VARCHAR},
      </if>
      <if test="bankphone != null" >
        #{bankphone,jdbcType=VARCHAR},
      </if>
      <if test="ordercreatetime != null" >
        #{ordercreatetime,jdbcType=VARCHAR},
      </if>
      <if test="riskmanagementype != null" >
        #{riskmanagementype,jdbcType=VARCHAR},
      </if>
      <if test="borrowtimelimit != null" >
        #{borrowtimelimit,jdbcType=INTEGER},
      </if>
      <if test="borrowmoneyway != null" >
        #{borrowmoneyway,jdbcType=VARCHAR},
      </if>
      <if test="howmanytimesbormoney != null" >
        #{howmanytimesbormoney,jdbcType=INTEGER},
      </if>
      <if test="borrowmoneystate != null" >
        #{borrowmoneystate,jdbcType=VARCHAR},
      </if>
      <if test="shouldreturntime != null" >
        #{shouldreturntime,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null" >
        #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="ifcandefer != null" >
        #{ifcandefer,jdbcType=VARCHAR},
      </if>
      <if test="candefernumberoftime != null" >
        #{candefernumberoftime,jdbcType=INTEGER},
      </if>
      <if test="riskmanagementfraction != null" >
        #{riskmanagementfraction,jdbcType=VARCHAR},
      </if>
      <if test="ifoverdue != null" >
        #{ifoverdue,jdbcType=VARCHAR},
      </if>
      <if test="overduegrade != null" >
        #{overduegrade,jdbcType=VARCHAR},
      </if>
      <if test="overduePhonestatu != null" >
        #{overduePhonestatu,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhita.model.manage.Orders" >
    update orders
    <set >
      <if test="companyid != null" >
        companyId = #{companyid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="borrowmoneyuse != null" >
        borrowMoneyUse = #{borrowmoneyuse,jdbcType=VARCHAR},
      </if>
      <if test="borrowrepaybankcard != null" >
        borrowRepayBankcard = #{borrowrepaybankcard,jdbcType=VARCHAR},
      </if>
      <if test="bankphone != null" >
        bankPhone = #{bankphone,jdbcType=VARCHAR},
      </if>
      <if test="ordercreatetime != null" >
        orderCreateTime = #{ordercreatetime,jdbcType=VARCHAR},
      </if>
      <if test="riskmanagementype != null" >
        riskManagemenType = #{riskmanagementype,jdbcType=VARCHAR},
      </if>
      <if test="borrowtimelimit != null" >
        borrowTimeLimit = #{borrowtimelimit,jdbcType=INTEGER},
      </if>
      <if test="borrowmoneyway != null" >
        borrowMoneyWay = #{borrowmoneyway,jdbcType=VARCHAR},
      </if>
      <if test="howmanytimesbormoney != null" >
        howManyTimesBorMoney = #{howmanytimesbormoney,jdbcType=INTEGER},
      </if>
      <if test="borrowmoneystate != null" >
        borrowMoneyState = #{borrowmoneystate,jdbcType=VARCHAR},
      </if>
      <if test="shouldreturntime != null" >
        shouldReturnTime = #{shouldreturntime,jdbcType=VARCHAR},
      </if>
      <if test="realtime != null" >
        realtime = #{realtime,jdbcType=VARCHAR},
      </if>
      <if test="ifcandefer != null" >
        ifcandefer = #{ifcandefer,jdbcType=VARCHAR},
      </if>
      <if test="candefernumberoftime != null" >
        canDeferNumberoftime = #{candefernumberoftime,jdbcType=INTEGER},
      </if>
      <if test="riskmanagementfraction != null" >
        riskmanagementFraction = #{riskmanagementfraction,jdbcType=VARCHAR},
      </if>
      <if test="ifoverdue != null" >
        ifoverdue = #{ifoverdue,jdbcType=VARCHAR},
      </if>
      <if test="overduegrade != null" >
        overdueGrade = #{overduegrade,jdbcType=VARCHAR},
      </if>
      <if test="overduePhonestatu != null" >
        overdue_phonestatu = #{overduePhonestatu,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhita.model.manage.Orders" >
    update orders
    set companyId = #{companyid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      borrowMoneyUse = #{borrowmoneyuse,jdbcType=VARCHAR},
      borrowRepayBankcard = #{borrowrepaybankcard,jdbcType=VARCHAR},
      bankPhone = #{bankphone,jdbcType=VARCHAR},
      orderCreateTime = #{ordercreatetime,jdbcType=VARCHAR},
      riskManagemenType = #{riskmanagementype,jdbcType=VARCHAR},
      borrowTimeLimit = #{borrowtimelimit,jdbcType=INTEGER},
      borrowMoneyWay = #{borrowmoneyway,jdbcType=VARCHAR},
      howManyTimesBorMoney = #{howmanytimesbormoney,jdbcType=INTEGER},
      borrowMoneyState = #{borrowmoneystate,jdbcType=VARCHAR},
      shouldReturnTime = #{shouldreturntime,jdbcType=VARCHAR},
      realtime = #{realtime,jdbcType=VARCHAR},
      ifcandefer = #{ifcandefer,jdbcType=VARCHAR},
      canDeferNumberoftime = #{candefernumberoftime,jdbcType=INTEGER},
      riskmanagementFraction = #{riskmanagementfraction,jdbcType=VARCHAR},
      ifoverdue = #{ifoverdue,jdbcType=VARCHAR},
      overdueGrade = #{overduegrade,jdbcType=VARCHAR},
      overdue_phonestatu = #{overduePhonestatu,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 后台管理              查询订单表所有的风控名 -->
  <select id="queryRiskcontrolname" parameterType="java.lang.Integer" resultType="java.lang.String">
  	select DISTINCT riskcontrolname from orders where companyid=#{arg0}
  </select>
  
  <!-- 后台管理          通过风控名查询风控信息 -->
  <select id="querymancon" resultType="com.zhita.model.manage.ManageControlSettings">
  	select  
  	id, companyId, rmModleName, totalScore, atrntlFractionalSegment, roatnptFractionalSegment,airappFractionalSegment, whetheruse, deleted
  	from manage_control_settings where companyId=#{arg0} and rmModleName=#{arg1} and deleted=0 
  </select>
  
  <!-- 后台管理             机审订单     (公司id，订单号，姓名，手机号，订单开始时间，订单结束时间，风控反馈，风控名字，风控分数开始，风控分数结束) -->
  <select id="queryatrOrders" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join repayment r on r.orderId=o.id
    where o.companyId=#{companyid,jdbcType=INTEGER} and o.riskcontrolname=#{riskcontrolname,jdbcType=VARCHAR} and (o.riskmanagementFraction &lt;= #{start,jdbcType=VARCHAR} or o.riskmanagementFraction &gt;= #{end,jdbcType=VARCHAR})
      <if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="orderstarttime != null and orderstarttime!='' and orderendtime!=null and orderendtime!=''">
           and o.orderCreateTime between #{orderstarttime,jdbcType=VARCHAR} and #{orderendtime,jdbcType=VARCHAR}
        </if>
        <if test="riskmanagementype!=null and riskmanagementype!= ''">
           and o.riskManagemenType=#{riskmanagementype,jdbcType=VARCHAR}
        </if>
  </select>
  
    <!--后台管理        机审拒绝未人审订单     (公司id，订单号，姓名，手机号，订单开始时间，订单结束时间 ，风控名字，  风控分数开始   风控分数结束) -->
  <select id="queryroaOrders" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join repayment r on r.orderId=o.id
    where o.companyId=#{companyid,jdbcType=INTEGER} and o.riskcontrolname=#{riskcontrolname,jdbcType=VARCHAR} and o.riskmanagementFraction between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR} and ifpeopleWhose=0
        <if test="ordernumber != null and ordernumber!='' ">
          and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="orderstarttime != null and orderstarttime!='' and orderendtime!=null and orderendtime!=''">
           and o.orderCreateTime between #{orderstarttime,jdbcType=VARCHAR} and #{orderendtime,jdbcType=VARCHAR}
        </if>
  </select>
  <!-- 后台管理         机审拒绝未人审订单——审核通过操作 -->
  <update id="upaOrderIfpeopleWhose">
  	update orders set ifpeopleWhose=1,assessor=#{arg1} where id=#{arg0}
  </update>
  
  
  
  <!--后台管理             已机审已人审（公司id，订单号，姓名，手机号，订单开始时间，订单结束时间      审核员    风控名字       风控分数开始   风控分数结束）-->
  <select id="queryroasOrders" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List2" />
    from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join repayment r on r.orderId=o.id left join sys_user su on su.userId=o.assessor
    where o.companyId=#{companyid,jdbcType=INTEGER} and o.riskcontrolname=#{riskcontrolname,jdbcType=VARCHAR} and o.riskmanagementFraction between #{start,jdbcType=VARCHAR} and #{end,jdbcType=VARCHAR} and ifpeopleWhose=1
        <if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="orderstarttime != null and orderstarttime!='' and orderendtime!=null and orderendtime!=''">
           and o.orderCreateTime between #{orderstarttime,jdbcType=VARCHAR} and #{orderendtime,jdbcType=VARCHAR}
        </if>
        <if test="assessor != null and assessor!='' ">
           and o.assessor =#{assessor,jdbcType=VARCHAR}
        </if>
  </select>
  <!-- 后台管理         订单 查询（公司id，订单号，姓名，手机号，注册开始时间，注册结束时间     渠道id   风控名字） -->
  <select id="queryAllOrders" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List1" />
    from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join source s on u.sourceId=s.id left join repayment r on r.orderId=o.id
    where o.companyId=#{companyid,jdbcType=INTEGER} and o.riskcontrolname=#{riskcontrolname,jdbcType=VARCHAR}
        <if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime !=null and registeendtime!=''">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename != null and sourcename!='' ">
           and u.sourceId =#{sourcename,jdbcType=VARCHAR}
        </if>
  </select>

  
        <!--编辑账单中根据日期和甲方查询出有多少条数据-->
 <select id="borrowNumber" parameterType="java.lang.Integer" resultType="java.lang.Integer">
select count(id) from orders where companyId = #{companyId} and userId = #{userId} and orderStatus = '3'
 </select> 
 
 
         <!--获取OrdersId-->
 <select id="getOrdersId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
select id from orders where companyId = #{companyId} and userId = #{userId} order by shouldReturnTime desc limit 1
 </select> 
  

    <!-- 后台管理         订单 查询（公司id，订单号，订单开始时间，订单结束时间     渠道id  用户id） -->
  <select id="queryAllOrdersByUserid" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
		select 
    	<include refid="Base_Column_List" />
   		from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join source s on s.id=u.sourceid 
   		left join manage_control_settings mcs on s.manageControlId=mcs.id
   		left join repayment r on r.orderId=o.id left join sys_user su on su.userId=u.operator
    	where o.companyId=#{companyid,jdbcType=INTEGER} and u.id=#{userid,jdbcType=INTEGER}
      	<if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime!=null and registeendtime!=''">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename!=null and sourcename!= ''">
           and u.sourceid=#{sourcename,jdbcType=INTEGER}
        </if>
        order by o.orderCreateTime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER} 
  </select>
  
   <!-- 后台管理         订单 查询（公司id，订单号，订单开始时间，订单结束时间     渠道id  用户id）    查询数量 -->
  <select id="queryAllOrdersByUseridcount" parameterType="com.zhita.model.manage.OrderQueryParameter" resultType="java.lang.Integer">
		select count(*) 
		from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join source s on s.id=u.sourceid 
		left join manage_control_settings mcs on s.manageControlId=mcs.id
   		left join repayment r on r.orderId=o.id left join sys_user su on su.userId=u.operator
    	where o.companyId=#{companyid,jdbcType=INTEGER} and u.id=#{userid,jdbcType=INTEGER}
      	<if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime!=null and registeendtime!=''">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename!=null and sourcename!= ''">
           and u.sourceid=#{sourcename,jdbcType=INTEGER}
        </if>
  </select>
   <!-- 后台管理         订单 查询（公司id，姓名，手机号，身份证号，注册开始时间，注册结束时间     渠道id） -->
  <select id="queryAllOrdersByUserid1" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List1" />
    from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id 
    left join source s on u.sourceId=s.id left join repayment r on r.orderId=o.id left join user_attestation uat on uat.userId=u.id
    where o.companyId=#{companyid,jdbcType=INTEGER} and u.id in(select userId from blacklist_user where blackType=1 and deleted=0)
         <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="idcard != null and idcard!='' ">
           and uat.idcard_number like "%"#{idcard,jdbcType=VARCHAR}"%"
        </if>
        <if test="registeClient != null and registeClient !='' ">
	       and u.registeClient = #{registeClient,jdbcType=VARCHAR}
	    </if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime and registeendtime!='' ">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename != null and sourcename!='' ">
           and u.sourceId=#{sourcename,jdbcType=INTEGER}
        </if>
        order by o.orderCreateTime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER} 
  </select>
   <!-- 后台管理         订单 查询（公司id，姓名，手机号，身份证号，注册开始时间，注册结束时间     渠道id）   查询数量 -->
  <select id="queryAllOrdersByUserid1count" parameterType="com.zhita.model.manage.OrderQueryParameter" resultType="java.lang.Integer">
  	 select count(*) from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id 
  	 left join source s on u.sourceId=s.id left join repayment r on r.orderId=o.id left join user_attestation uat on uat.userId=u.id
     where o.companyId=#{companyid,jdbcType=INTEGER} and u.id in(select userId from blacklist_user where blackType=1 and deleted=0)
         <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone like "%"#{phone,jdbcType=VARCHAR}"%"
        </if>
        <if test="idcard != null and idcard!='' ">
           and uat.idcard_number like "%"#{idcard,jdbcType=VARCHAR}"%"
        </if>
        <if test="registeClient != null and registeClient !='' ">
	       and u.registeClient = #{registeClient,jdbcType=VARCHAR}
	    </if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime and registeendtime!='' ">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename != null and sourcename!='' ">
           and u.sourceId=#{sourcename,jdbcType=INTEGER}
        </if>
  </select>
  <!-- 后台管理         渠道统计模块——申请人数字段 -->
  <select id="queryNum" resultType="java.lang.Integer">
  	 select count(*) from orders o inner join user u on o.userId=u.id inner join source s on u.sourceId=s.id
     where o.companyId=#{arg0} and s.sourceName=#{arg1}
  </select>
  <!-- 后台管理        渠道统计模块——机审通过字段 -->
  <select id="queryNum1" resultType="java.lang.Integer">
  	 select count(*) from orders o inner join user u on o.userId=u.id inner join source s on u.sourceId=s.id
     where o.companyId=#{arg0} and s.sourceName=#{arg1} and o.riskmanagementFraction between #{arg2} and #{arg3}
  </select>

  
  
  	<insert id="setOrder" parameterType="java.util.Map">
		insert into orders(companyId,userId,orderNumber,orderCreateTime,borrowTimeLimit,howManyTimesBorMoney,shouldReturnTime,riskmanagementFraction,borrowMoneyWay) values(#{companyId},#{userId},#{orderNumber},#{orderCreateTime},#{lifeOfLoan},#{howManyTimesBorMoney},#{shouldReturned},#{riskmanagementFraction},#{borrowMoneyWay})
	</insert>


  <select id="getOrderId" parameterType="java.lang.String" resultType="java.lang.Integer">
  select id from orders where orderNumber = #{orderNumber}
  </select>
  
  
    <select id="getReimbursement" parameterType="java.lang.Integer" resultType="java.util.Map">
  select borrowTimeLimit from orders where orderNumber = #{orderNumber}
  </select>
  
      <select id="getRepayment" parameterType="java.lang.Integer" resultType="java.util.Map">
  select id,orderStatus,shouldReturnTime,orderNumber from orders where userId = #{userId} and companyId = #{companyId} and (orderStatus='0' or orderStatus='1' or orderStatus='2') order by shouldReturnTime desc limit 1
  </select>
	
  <!-- 后台管理        查询产生该订单的用户是第几次借款-->
  <select id="queryHow" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select count(id) from orders where userid=#{arg0}
  </select>
  
  <!--后台管理      查询产生该订单的用户最后借款金额和最后借款时间  -->
  <select id="qeuryafter" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Orders">
  	select od.realityBorrowMoney finalborrowmoney,max(o.ordercreatetime) finalborrowtime from orders o inner join orderdetails od on o.id=od.orderid where userid=#{arg0};
  </select>
  <!-- 后台管理        通过订单查询改订单在延期表信息 -->
  <select id="queryDefer" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.DeferredAndOrder">
  	select o.id,o.orderNumber,d.interestOnArrears from orders o inner join deferred d on d.orderid=o.id  where o.id=#{arg0}
  </select>
  <!-- 查询最后延期时间 -->
  <select id="qeuryFinalDefertime" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Orders">
  	select max(deferAfterReturntime) deferAfterReturntime,postponeDate from deferred where orderid=#{arg0}
  </select> 
  <!-- 后台管理      查询出sysuser表所有的name -->
  <select id="queryname" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.SysUser">
  	select userId,account from sys_user where companyId=#{arg0} and status=1
  </select>
  <!-- 后台管理      查询出source表所有的信息 -->
  <select id="querysource" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Source">
  	select id,sourceName from source where companyId=#{arg0} and deleted=0
  </select>


  <select id="getBorrowTimeLimit" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select borrowTimeLimit from orders where companyId=#{companyId} and userId = #{userId} order by shouldReturnTime desc limit 1
  </select>
  
  
    <select id="getorderStatus" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select count(id) from orders where (orderStatus='0' or orderStatus='1' or orderStatus='2') and companyId=#{companyId} and userId = #{userId} order by shouldReturnTime desc limit 1
  </select>
  
  		<select id="getorderStatus1" parameterType="java.lang.Integer" resultType="java.lang.String">
		select orderStatus from orders where userId = #{userId} and companyId = #{companyId} order by shouldReturnTime desc limit 1
	</select>


  
  <!-- 订单 修改 -->
  <!-- 订单查询（公司id，page,pagesize,订单号，姓名，手机号，订单开始时间，订单结束时间，渠道id） -->
  <select id="queryAllordersByLike" parameterType="com.zhita.model.manage.OrderQueryParameter" resultMap="BaseResultMap">
		select 
    	<include refid="Base_Column_List" />
   		from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id left join source s on s.id=u.sourceid 
   		left join manage_control_settings mcs on s.manageControlId=mcs.id 
   		left join repayment r on r.orderId=o.id left join sys_user su on su.userId=u.operator
    	where o.companyId=#{companyid,jdbcType=INTEGER}
      	<if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone = #{phone,jdbcType=VARCHAR}
        </if>
        <if test="registeClient != null and registeClient !='' ">
			and u.registeClient = #{registeClient,jdbcType=VARCHAR}
		</if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime!=null and registeendtime!=''">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename!=null and sourcename!= ''">
           and u.sourceid=#{sourcename,jdbcType=INTEGER}
        </if>
        order by o.orderCreateTime desc limit #{page,jdbcType=INTEGER},#{pagesize,jdbcType=INTEGER} 
  </select>
  <!-- 订单 修改 -->
  <!-- 订单查询（公司id，page,pagesize,订单号，姓名，手机号，订单开始时间，订单结束时间，渠道id） 查询数量-->
  <select id="queryAllordersByLikeCount" parameterType="com.zhita.model.manage.OrderQueryParameter" resultType="java.lang.Integer">
		select count(*)
   		from orders o left join orderdetails od on o.id=od.orderId left join user u on o.userId=u.id 
   		left join source s on s.id=u.sourceid left join manage_control_settings mcs on s.manageControlId=mcs.id 
   		left join repayment r on r.orderId=o.id left join sys_user su on su.userId=u.operator
    	where o.companyId=#{companyid,jdbcType=INTEGER}
      	<if test="ordernumber != null and ordernumber!='' ">
           and o.orderNumber like "%"#{ordernumber,jdbcType=VARCHAR}"%"
        </if>
        <if test="name != null and name!='' ">
           and u.name like "%"#{name,jdbcType=VARCHAR}"%"
        </if>
        <if test="phone != null and phone!='' ">
           and u.phone = #{phone,jdbcType=VARCHAR}
        </if>
         <if test="registeClient != null and registeClient !='' ">
			and u.registeClient = #{registeClient,jdbcType=VARCHAR}
 		</if>
        <if test="registestarttime != null and registestarttime!='' and registeendtime!=null and registeendtime!=''">
           and u.registeTime between #{registestarttime,jdbcType=VARCHAR} and #{registeendtime,jdbcType=VARCHAR}
        </if>
        <if test="sourcename!=null and sourcename!= ''">
           and u.sourceid=#{sourcename,jdbcType=INTEGER}
        </if>
  </select>


  		<select id="getshouldReturnTime" parameterType="java.lang.Integer" resultType="java.lang.String">
		select shouldReturnTime from orders where companyId=#{companyId} and userId = #{userId} order by shouldReturnTime desc limit 1
	</select>

</mapper>