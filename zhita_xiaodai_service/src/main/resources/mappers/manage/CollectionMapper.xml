<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhita.dao.manage.CollectionMapper">
	
		<select id="OrderIdMa" resultType="java.lang.Integer" parameterType="java.lang.Integer">
			select c.orderId from collection c,sys_user com where 
			com.companyId=#{companyId} and com.userId = c.collectionMemberId
			group by c.orderId
		</select> 
		
		
		<select id="SelectTotalCount" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(*) from orders where id not in
			(select c.orderId from collection c,orders o where o.id = c.orderId and o.companyId = #{companyId} )
		 	AND companyId = #{companyId}
		</select>
		
		
		<select id="Allorderdetails" parameterType="com.zhita.model.manage.Collection" resultType="com.zhita.model.manage.Orderdetails">
			select ord.orderId,o.orderNumber,u.name,u.phone,o.borrowMoneyWay,o.borrowTimeLimit,o.orderCreateTime,ord.realityAccount as realityBorrowMoney,
			ord.overdueNumberOfDays,ord.interestPenaltySum,o.realtime,ord.interestSum,ord.realityBorrowMoney as cca,o.shouldReturnTime
			from orders o,user u,orderdetails ord
			<where>
				ord.orderId not in (select c.orderId from collection c,orders o where o.id = c.orderId AND o.companyId = 3)
				AND o.orderStatus = "1"
				AND o.id = ord.orderId
				AND u.id = o.userId
				and o.companyId = #{companyId}
				<if test="name != '' and name != null">
					AND u.name like CONCAT('%',#{name},'%') 
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone like CONCAT('%',#{phone},'%') 
				</if>
				<if test="orderNumber != null and orderNumber != ''">
					AND o.orderNumber like CONCAT('%',#{orderNumber},'%') 
				</if>
			</where>
			group by ord.orderId 
			limit #{page},#{pagesize}
		</select>
		
		
		
		<select id="DefeSet" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Deferred">
			select MAX(defe.id),defe.deferBeforeReturntime,defe.interestOnArrears,deset.onceDeferredDay,defe.deferAfterReturntime from 
			deferred defe,deferred_settings deset,orders o where o.companyId = deset.companyId and o.id = defe.orderid
			and o.id = #{orderId} and defe.deleted = "0"
		</select>
		
		
		<select id="CollMen" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Collection">
			select colme.account as reallyName,col.collectionTime,col.collectionStatus from collection col,sys_user colme,orders o
			where o.id = col.orderId and col.collectionMemberId = colme.userId and o.id =#{orderId}
		</select>
		
		
		<select id="CollectionAll" parameterType="com.zhita.model.manage.Sys_user" resultType="com.zhita.model.manage.Sys_user">
			select account as reallyName,userId as id from sys_user where companyId = #{companyId} and userId in (select userId from sysuser_role where roleId in
			 (select roleId from role where roleName like CONCAT('%',#{roleName},'%')  ))
		</select>
		
		
		
		<insert id="addCollection" parameterType="com.zhita.model.manage.Collection">
			insert into `collection` (collectionMemberId,orderId,collectionStatus,collectionTime,deleted,promise_money,usertype) values  
	            (#{collectionMemberId},#{orderId},#{collectionStatus},#{collectionTime},#{deleted},#{promise_money},#{usertype})  
	     
		</insert>
		
		
		
		<select id="SelectOrdersdetails" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Orderdetails">
			select ord.orderId,o.orderNumber,u.name,u.phone,o.borrowMoneyWay,o.borrowTimeLimit,o.shouldReturnTime,ord.overdueNumberOfDays,ord.interestPenaltySum,
			o.orderCreateTime,ord.realityBorrowMoney,ord.makeLoans,ord.realityAccount,colme.account as reallyName,o.overdueGrade,ord.surplus_money,
			col.collectionTime,col.usertype as collectionStatus,o.orderStatus,o.overdueGrade
			from orders o,orderdetails ord,collection col,user u,sys_user colme
			<where>
				    o.id = ord.orderId 
				and col.orderId = o.id
				and o.companyId = #{companyId}
				and u.id = o.userId 
				and colme.userId = col.collectionMemberId
				<if test="realityBorrowMoney != null and realityBorrowMoney != ''">
					AND ord.realityBorrowMoney = #{realityBorrowMoney}
				</if>
				<if test="overdueGrade != null and overdueGrade != ''">
					AND o.overdueGrade = #{overdueGrade}
				</if>
				<if test="makeLoans != null and makeLoans != ''">
					AND ord.makeLoans = #{makeLoans}
				</if>
				<if test="shouldAlsoInterest != null and shouldAlsoInterest != ''">
					AND ord.shouldAlsoInterest = #{shouldAlsoInterest}
				</if>
				<if test="shouldReapyMoney != null and shouldReapyMoney != ''">
					AND ord.shouldReapyMoney = #{shouldReapyMoney}
				</if>
				<if test="orderId != null and orderId != ''">
					AND o.id = #{orderId}
				</if>
				<if test="name != '' and name != null">
					AND u.name LIKE concat('%',#{name},'%')
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone LIKE concat('%',#{phone},'%')
				</if>
				<if test="grade != null and grade != ''">
					AND o.grade = #{grade}
				</if>
				<if test="collectionStatus != null and collectionStatus != ''">
					AND col.collectionStatus = #{collectionStatus}
				</if>
				<if test="collectionMemberId != null and collectionMemberId != ''">
					AND col.collectionMemberId = #{collectionMemberId}
				</if>
				<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
					AND o.orderCreateTime between #{start_time} and #{end_time}
				</if>
				<if test="deferBeforeReturntime != null and deferBeforeReturntime != '' and deferAfterReturntime != null and deferAfterReturntime != ''">
					AND col.collectionTime between #{start_time} and #{end_time}
				</if>
			</where>
			group by o.id
			limit #{page},#{pagesize}
		</select>
		
		
		
		<select id="OneOrdersdetails" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Orderdetails">
			select o.borrowTimeLimit,orders.*,u.name,u.phone,c.collectionStatus,cmem.account as reallyName,overdue.grade,
			c.collectionTime,o.orderNumber,o.id,o.borrowMoneyWay,defe.deferBeforeReturntime,defe.deferAfterReturntime 
			from 
			collection c left join sys_user cmem on c.collectionMemberId = cmem.userId
			left join orders o on o.id = c.orderId
			left join overdue_class overdue on o.companyId = overdue.companyId
			left join user u on u.id = o.userId
			left join orderdetails orders on o.id =orders.orderId
			left join deferred defe on defe.orderId
			<where>
				and defe.deleted = "0"
				AND o.orderNumber LIKE concat('%',#{orderNumber},'%') 
				AND o.companyId = #{companyId}
			</where>	
				group by orders.orderId
				limit #{page},#{pagesize}	
		</select>
		
		
		
		<select id="SelectSumOrderNum" resultType="com.zhita.model.manage.Collection" parameterType="com.zhita.model.manage.Collection">
			select  o.orderCreateTime  from orders o
				<where>
					AND o.companyId = #{companyId} 
					<if test="borrowMoneyType != null and borrowMoneyType != ''">
						AND o.borrowMoneyType = #{borrowMoneyType}
					</if>
					<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
						AND o.orderCreateTime between #{start_time} and #{end_time}
					</if>
				</where>
				GROUP BY o.orderCreateTime
		</select>
	
 	
		<select id="SelectSumOrder" resultType="com.zhita.model.manage.Collection" parameterType="com.zhita.model.manage.Collection">
			select col.collectionTime,count(col.orderId) as collection_count from orders o,collection col
				<where>
					and o.id = col.orderId
					AND o.companyId = #{companyId} 
					<if test="borrowMoneyType != null and borrowMoneyType != ''">
						AND o.borrowMoneyType = #{borrowMoneyType}
					</if>
					<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
						AND o.orderCreateTime between #{start_time} and #{end_time}
					</if>
				</where>
				GROUP BY col.collectionTime
		</select>
		
		
		
		
		<select id="SelectReallyName" parameterType="com.zhita.model.manage.Collection" resultType="com.zhita.model.manage.Collection">
			select colme.account as reallyName,c.collectionTime,count(c.collectionTime) as collection_count from 
			collection c,sys_user colme
			<where>
				AND c.collectionMemberId = colme.userId 
				<if test="start_time != null and statu_time != '' and end_time != null and end_time != ''">
					AND c.collectionTime between #{statu_time} and#{end_time}
				</if>
			</where>
			GROUP BY c.collectionMemberId
		</select>
		
		
		
		<select id="OrderOknum" parameterType="java.lang.String" resultType="java.lang.Integer">
			select count(*) from collection where collectionTime = #{collectionTime}
		</select>
		
		
		<select id="OrderChengnuo" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(*) from collection where collectionTime = #{collectionTime} and collectionStatus = #{collectionStatus}
		</select>
		
		
		
		<select id="SelectUserNum" resultType="com.zhita.model.manage.Collection" parameterType="com.zhita.model.manage.Collection">
			SELECT collectionTime from collection
				<where>
					<if test="collectionMemberId != null and collectionMemberId != ''">
						AND collectionMemberId = #{collectionMemberId}
					</if>
					<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
						AND collectionTime between #{start_time} and #{end_time}
					</if>
				</where>
		</select>
		
		
		<select id="Collectionmemberdetilas" resultType="com.zhita.model.manage.Collection" parameterType="com.zhita.model.manage.Collection">
			SELECT cmember.account as reallyName,count(c.collectionId) as collection_count,c.collectionTime,c.collectionMemberId
			from collection c,sys_user cmember
		 	<where>
		 		AND c.collectionMemberId=cmember.userId
				<if test="collectionMemberId != null and collectionMemberId != ''">
					AND c.collectionMemberId = #{collectionMemberId}
				</if>
				<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
					AND c.collectionTime between #{start_time} and #{end_time}
				</if>
			</where>
		 	GROUP BY c.collectionMemberId
		</select>
		
		
		<select id="CollectionNum" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(*) from collection where collectionMemberId = #{collectionMemberId} and collectionStatus = #{collectionStatus}
		</select>
		
		
		<select id="FenpeiCollection" parameterType="com.zhita.model.manage.Collection" resultType="com.zhita.model.manage.Orderdetails">
			select col.collectionId,ord.orderId,o.orderNumber,u.name,u.phone,o.borrowMoneyWay,o.borrowTimeLimit,o.shouldReturnTime,ord.overdueNumberOfDays,ord.interestPenaltySum,
			o.orderCreateTime,ord.realityBorrowMoney,ord.makeLoans,ord.realityAccount,colme.account as reallyName,o.overdueGrade,ord.surplus_money,col.collectionTime,
			col.promise_money,col.collectionTime,col.collectionStatus,o.orderStatus
			from collection col,orders o,orderdetails ord,sys_user colme,user u 
			<where>
				o.id = col.orderId 
				and o.id = ord.orderId 
				and col.collectionMemberId = colme.userId 
				and u.id = o.userId 
				and col.usertype is null
				and o.orderStatus between "0" and "3"
				and o.companyId = #{companyId}
				and col.collectionMemberId = #{collectionMemberId}
				<if test="name != null and name != ''">
					AND u.name LIKE concat('%',#{name},'%')  
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone LIKE concat('%',#{phone},'%')   
				</if>
				<if test="orderNumber != null and orderNumber != ''">
					AND o.orderNumber LIKE concat('%',#{orderNumber},'%')    
				</if>
			</where>
				group by col.orderId
				limit #{page},#{pagesize}
		</select>
		
		
		<select id="CollectionTotalcount" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(c.orderId) from 
			collection c left join sys_user cmem on c.collectionMemberId = cmem.userId
			left join orderdetails orders on c.orderId = orders.orderId
			left join orders o on o.id = c.orderId
			left join overdue_class overdue on o.companyId = overdue.companyId
			left join user u on u.id = o.userId
			<where>
				<if test="name != null and name != ''">
					AND u.name LIKE concat('%',#{name},'%')    
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone LIKE concat('%',#{phone},'%')
				</if>
				<if test="orderNumber != null and orderNumber != ''">
					AND o.orderNumber LIKE concat('%',#{orderNumber},'%') 
				</if>
				AND o.companyId = #{companyId} 
				AND c.orderId not in 
				<foreach collection="ids" item="orderid" open="(" separator="," close=")">
					#{orderid}
				</foreach>
			</where>
			group by c.orderId
		</select>
		
		
		<select id="AllCountNum" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			SELECT COUNT(c.collectionId) from collection c,sys_user com where c.collectionMemberId = com.userId 
			and com.companyId = #{companyId} and c.usertype is null
		</select>
		
		
		<select id="CollectionWeiTotalcount" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(o.id) from collection 
			c,sys_user cmem,orderdetails orders,orders o,user u
			<where>
				AND o.id = orders.orderId
				AND u.id = o.userId
				AND c.orderId = o.id
				AND c.collectionMemberId = cmem.userId
				AND o.companyId = #{companyId} 
				<if test="name != null and name != ''">
					AND u.name LIKE concat('%',#{name},'%')  
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone LIKE concat('%',#{phone},'%')  
				</if>
				<if test="orderNumber != null and orderNumber != ''">
					AND o.orderNumber LIKE concat('%',#{orderNumber},'%') 
				</if>
				<if test="deferAfterReturntimeStatu_time != null and deferAfterReturntimeStatu_time != '' and deferAfterReturntimeEnd_time != null and deferAfterReturntimeEnd_time != ''">
					AND defe.deferAfterReturntime between #{deferAfterReturntimeStatu_time} and #{deferAfterReturntimeEnd_time}
				</if>
				AND o.id  in 
				(select c.orderId from collection c,orders o where o.id = c.orderId and o.companyId=#{companyId})
			</where>
		</select>
		
		
		
		<select id="SelectCollectionId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
			select userId from sys_user where companyId = #{companyId}
		</select>
		
		
		<select id="SelectCollectionMemberIds" parameterType="java.util.List" resultType="java.lang.Integer">
			select orderId from collection where collectionMemberId in 
			<foreach collection="ids" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
			group by orderId
		</select>
		
		
		<select id="SelectId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
			select c.orderId from collection c,sys_user coml where coml.companyId = #{id} and coml.userId = c.collectionMemberId and collectionStatus is not null
			group by orderId
		</select>
		
		<select id="OneCollection" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Collectiondetails">
			select col.collection_time,col.user_type,col.collectionmoney,col.orderId,col.collectionMemberId,o.orderStatus from collectiondetails col,orders o
			<where>
				orderId = #{orderId} 
				AND o.id = col.orderId
			</where>
		</select>
				
				
		<select id="WeiControllerOrdetialis" parameterType="com.zhita.model.manage.Orderdetails" resultType="com.zhita.model.manage.Orderdetails">
			select o.id,ord.orderId,o.orderNumber,u.name,u.phone,o.borrowMoneyWay,o.borrowTimeLimit,o.shouldReturnTime,ord.overdueNumberOfDays,ord.interestPenaltySum,
			o.orderCreateTime,ord.realityBorrowMoney,ord.makeLoans,ord.realityAccount,colme.account as reallyName,o.overdueGrade,ord.surplus_money,col.collectionTime,
			col.promise_money,col.promise_money,col.collectionTime,col.collectionStatus,o.orderStatus,o.overdueGrade,o.shouldReturnTime,ord.shouldReapyMoney
			 from orders o ,orderdetails ord,sys_user colme,user u ,deferred_settings deset,overdue_class ov,collection col,collectiondetails collection
			<where>
				o.companyId = ov.companyId 
				and  o.id = ord.orderId  
				and deset.companyId = o.companyId 
				and u.id = o.userId 
				and o.id = col.orderId 
				and o.companyId = #{companyId}
				and col.collectionMemberId = colme.userId
				and collection.user_type is not null
				<if test="name != null and name != ''">
					AND u.name LIKE concat('%',#{name},'%')  
				</if>
				<if test="phone != null and phone != ''">
					AND u.phone LIKE concat('%',#{phone},'%') 
				</if>
				<if test="orderNumber != null and orderNumber != ''">
					AND o.orderNumber LIKE concat('%',#{orderNumber},'%')  
				</if>
				<if test="overdueGrade != null and overdueGrade != ''">
					AND o.overdueGrade = #{overdueGrade}
				</if>
				<if test="start_time != null and start_time != '' and end_time != null and end_time != ''">
					AND o.orderCreateTime between #{start_time} and #{end_time}
				</if>
				<if test="realtime != null and realtime != ''">
					AND ord.realtime = #{realtime}
				</if>
				<if test="describe != null and describe != ''">
					AND ord.overdueNumberOfDays = #{describe}
				</if>
				<if test="deferAfterReturntimeStatu_time != null and deferAfterReturntimeStatu_time != '' and deferAfterReturntimeEnd_time != null and deferAfterReturntimeEnd_time != ''">
					AND o.shouldReturnTime between #{deferAfterReturntimeStatu_time} and #{deferAfterReturntimeEnd_time}
				</if>
			</where>
			group by o.id
			limit #{page},#{pagesize}
		</select>
		
		
		<select id="CollNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
			select count(collectionId) from collection where orderId = #{orderId}
		</select>
		
		
		<insert id="AddCollectionAs" parameterType="com.zhita.model.manage.Collection">
			INSERT INTO `Collection` (
				collectionMemberId,
				orderId,
				collectionStatus,
				collectionTime,
				deleted,
				promise_money
			)VALUES
			(#{collectionMemberId},#{orderId},#{collectionStatus},#{collectionTime},#{deleted},#{promise_money})
		</insert>
		
		
		<select id="SelectOrderNum" parameterType="com.zhita.model.manage.Collectiondetails" resultType="java.lang.Integer">
			select count(*) from orders where orderCreateTime = #{collection_time} and companyId = #{companyId}
		</select>
		
		
		
		<select id="SelectCollectionNum" parameterType="com.zhita.model.manage.Collectiondetails" resultType="java.lang.Integer">
			select count(*) from collection where collectionMemberId in
			<foreach collection="ids" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
			AND collectionTime = #{collectionTime}
		</select>
		
		
		<select id="SelectcollectionStatus" parameterType="com.zhita.model.manage.Collectiondetails" resultType="java.lang.Integer">
			select count(*) from collection where collectionMemberId in
			<foreach collection="ids" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
			AND collectionTime = #{collectionTime}
			AND collectionStatus = #{collectionStatus}
		</select>
		
		
		<select id="SelectUserCollectionNum" parameterType="com.zhita.model.manage.Collectiondetails" resultType="java.lang.Integer">
			select count(orderId) from collection where collectionMemberId = #{collectionMemberId}
			AND collectionTime = #{collectionTime} group by orderId
		</select>
		
		
		<select id="SelectUsercollectionStatus" parameterType="com.zhita.model.manage.Collectiondetails" resultType="java.lang.Integer">
			select count(*) from collection where  collectionMemberId = #{collectionMemberId}
			AND collectionTime = #{collectionTime}
			AND collectionStatus = #{collectionStatus}
		</select>
		
		
		
		
		<select id="DefNuma" parameterType="java.lang.Integer" resultType="com.zhita.model.manage.Deferred">
			select count(id) as DefeNum,sum(interestOnArrears) as interestOnArrears from deferred where orderId = #{orderId} and deleted = "0"
		</select>
		
		
		<update id="UpdateCollectionDelete" parameterType="java.lang.Integer">
			update collection set deleted = "1" where orderId = #{orderId}			
		</update>
		
		
		<update id="UpdateOrderStatus" parameterType="java.lang.Integer">
			update orders set orderStatus = "4" where id = #{orderId}
		</update>
		
		
		<update id="UpdateCollection" parameterType="com.zhita.model.manage.Collection">
			update collection set usertype = #{usertype},promise_money = #{promise_money}, collectionStatus = #{collectionStatus} where collectionId = #{collectionId}
		</update>
		
		
		<insert id="AddCollOrders" parameterType="com.zhita.model.manage.Collectiondetails">
			INSERT INTO `collectiondetails`(
			collection_time,
			user_type,
			collectionmoney,
			collectionMemberId,
			orderId
			)
			VALUES
			(#{collection_time},#{user_type},#{collectionmoney},#{collectionMemberId},#{orderId})
		</insert> 
		
		
		<select id="OneCollecti" parameterType="com.zhita.model.manage.Collection" resultType="com.zhita.model.manage.Collection">
			select realtime,count(id) as orderNum from orders where orderStatus = "1"
             and orderCreateTime between #{start_time} and #{end_time} and companyId = #{companyId}
		</select>
		
		
		<select id="FenCol" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(o.id) from orders o,collection c 
			<where>
			 c.orderId = o.id and o.companyId=#{companyId}
			  and o.realtime between #{start_time} and #{end_time} 
			<if test="collectionMemberId != null and collectionMemberId != ''">
				AND c.collectionMemberId = #{collectionMemberId}
			</if>
			</where>
		</select>
		
		
		<select id="SelectcollectionStatuCC" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(o.id) from collection c,orders o 
			<where>
			 o.realtime between #{start_time} and #{end_time} 
			AND c.collectionStatus = #{collectionStatus} 
			and o.companyId = #{companyId}
			AND c.collectionMemberId = #{collectionMemberId}
			</where>
		</select>
		
		
		<select id="SelectEctuib" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(o.id) from collection c,orders o 
			<where>
			 o.realtime between #{start_time} and #{end_time} 
			AND c.collectionStatus = #{collectionStatus} 
			and o.companyId = #{companyId}
			AND c.collectionMemberId = #{collectionMemberId}
			</where>
		</select> 
		
		
		 <select id="SelectcollectionStatusAs" parameterType="com.zhita.model.manage.Collection" resultType="java.lang.Integer">
			select count(o.id) from collection c,orders o 
			<where>
			 o.orderStatus = #{orderStatus}
			and o.realtime between #{start_time} and #{end_time} 
			and o.companyId = #{companyId}
			<if test="collectionMemberId != null and collectionMemberId != ''">
				AND c.collectionMemberId = #{collectionMemberId}
			</if>
			</where>
		</select>
		
		
		
		<select id="Collectionmem" parameterType="com.zhita.model.manage.Collection" resultType="com.zhita.model.manage.Collection">
			select c.collectionMemberId,come.account as reallyName,count(c.orderId) as orderNum from sys_user come,collection c,orders o 
			<where>
			o.id = c.orderId 
			and c.collectionMemberId = come.userId
			and o.companyId = #{companyId} 
			and c.collectionTime between #{start_time} and #{end_time}
			<if test="collectionMemberId != null and collectionMemberId !=''">
				and c.collectionMemberId = #{collectionMemberId}
			</if>
			</where>
			group by c.collectionMemberId
		</select>
		
		
		
		<select id="SelectMakeLoan" parameterType="java.lang.String" resultType="java.math.BigDecimal">
			select sum(b.deduction_money) from bankdeductions b,orders o where b.orderId = o.id and b.orderId = #{orderId}
		</select>
		
		
		
		<select id="PrmoiseMoney" parameterType="java.lang.Integer" resultType="java.math.BigDecimal">
			select sum(collectionmoney) from collectiondetails where orderId = #{orderId}
		</select> 
</mapper>